@model IEnumerable<EffortlessKitchen.Models.MenuOption>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex flex-wrap justify-content-between header-stuff">
    <h3>The Menu</h3>
    @if (SignInManager.IsSignedIn(User))
    {
        @if (UserManager.GetUserAsync(User).Result.Admmin == true)
        {
            <a type="button" class="btn btn-light btn-lg pt-2" asp-action="Create">Create New</a>
        }
    }
</div>

<div class="d-flex flex-wrap">
    @foreach (var item in Model)
    {
        <div class="card m-2" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">
                    @Html.DisplayFor(modelItem => item.Name)
                </h5>
                <h6 class="card-subtitle mb-2 text-muted">
                    @Html.DisplayFor(modelItem => item.Price)
                </h6>
                <p class="card-text">
                    @Html.DisplayFor(modelItem => item.Description)
                </p>
                @if (SignInManager.IsSignedIn(User))
                {
                    @if (UserManager.GetUserAsync(User).Result.Admmin == true)
                    {
                        @Html.ActionLink("Edit   ", "Edit", new { id = item.MenuOptionId })
                        @Html.ActionLink("See More   ", "Details", new { id = item.MenuOptionId })
                        @Html.ActionLink("Delete", "Delete", new { id = item.MenuOptionId })
                    }

                }
                @if (SignInManager.IsSignedIn(User))
                {
                    @if (UserManager.GetUserAsync(User).Result.Admmin == false)
                    {
                        @Html.ActionLink("See More", "Details", new { id = item.MenuOptionId })
                    }
                }
            </div>
        </div>
    }
</div>
